openapi: 3.0.3
info:
  title: User Contract
  version: 1.0.0
paths:
  /user:
    get:
      summary: get user information
      operationId: getUser
      tags:
        - user

      responses:
        200:
          description: Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                id: 1
                firstName: Mohamed
                lastName: Gomaa
  /product:
    get:
      summary: test
      description: test
      parameters:
        - name: status
          in: query
          style: form
          explode: false
          required: false
          schema:
            type: array
            items:
              type: string

      responses:
        204:
          description: No CONTENT
    post:
      summary: test
      description: test
      parameters:
        - name: status.gt
          in: query
          required: false
          schema:
            type: string

      responses:
        204:
          description: No CONTENT
  /code/{id}:
    patch:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64

      description: "test"
      operationId: "activate"

      requestBody:
        required: true
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PatchRequest'
      responses:
        200:
          description: Ok
  /polyTest:
    post:
      description: "test"
      operationId: "test1"

      requestBody:
        content:
          application/json-patch+json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/FirstTest"
                - $ref: "#/components/schemas/SecondTest"
      responses:
        200:
          description: Ok
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
    PatchRequest:
      type: object
      oneOf:
        - $ref: '#/components/schemas/JSONPatchRequestAddReplaceTest'
        - $ref: '#/components/schemas/JSONPatchRequestRemove'
      discriminator:
        propertyName: op
        mapping:
          add: '#/components/schemas/JSONPatchRequestAddReplaceTest'
          replace: '#/components/schemas/JSONPatchRequestAddReplaceTest'
          remove: '#/components/schemas/JSONPatchRequestRemove'


    JSONPatchRequestAddReplaceTest:
      type: object
      additionalProperties: false
      required:
        - value
        - op
        - path
      properties:
        path:
          description: A JSON Pointer path.
          type: string
        value:
          type: object
          description: The value to add, replace or test.
        op:
          description: The operation to perform.
          type: string
    JSONPatchRequestRemove:
      type: object
      additionalProperties: false
      required:
        - op
        - path
      properties:
        path:
          description: A JSON Pointer path.
          type: string
          nullable: false

        op:
          description: The operation to perform.
          type: string
          nullable: false

    JSONPatchRequestMoveCopy:
      type: object
      additionalProperties: false
      required:
        - from
        - op
        - path
      properties:
        path:
          description: A JSON Pointer path.
          type: string
        op:
          description: The operation to perform.
          type: string
          enum:
            - move
            - copy
        from:
          description: A JSON Pointer path.
          type: string
    FirstTest:
      type: object
      properties:
        name:
          type: string
    SecondTest:
      type: object
      properties:
        age:
          type: integer

